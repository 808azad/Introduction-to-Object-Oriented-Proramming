In order to complete the workshop 5, interesting new concept of Object-Oriented Programming was covered. For this time, we got introduced with the topic called operators. Operators are the symbols (can be also the keywords) that perform the operation on provided operands. All the operators in C++ are built in, and language defines the logic for the operands of the fundamental types. For performing the operations on the operators of the class type, we have to define the logic by ourselves (overload the built it operators). For overloading purposes, we always have to use the keyword “operator”. The C++ supports the overloading of the following operators: binary arithmetic (+, -, *, /, %), assignment (=, +=, -=, *=, /=, %=), unary (++, --, +, -), relational (==, <, >, <=, >=, !=), logical(&&, ||, !), insertion, extraction (<<, >>). Operators are classified by the numbers of operands they take (Unary - one operand, binary, two operands and tertiary - three operands). However, there are two types of overloaded operators. One of them is member type which have a direct access to the object of class. The second one is a helper type, which supports the class without having a direct access to its members.

There were no serios issues during the completion process of the workshop. Only just the second part was little bit harder that the first. Fortunately, after spending some time on that, I was able to successfully complete it.
